version: 2.1

orbs:
  slack: circleci/slack@4.10.1

commands:
  restore-frontend-cache:
    description: For cache modularity
    steps:
      - restore_cache:
          keys:
            - frontend-modules
  restore-backend-cache:
    description: For cache modularity
    steps:
      - restore_cache:
          keys:
            - backend-modules


  build:
    description: For build command modularity
    steps:
      - run:
          name: Build frontend and backend
          command: |
            cd frontend
            npm install
            npm run build
  test:
    description: For test command modularity
    steps:
      - run:
          name: Test frontend and backend
          command: |
            cd frontend
            npm install
            npm run test
  scan:
    description: For scan command modularity
    steps:
      - run:
          name: scan frontend and backend
          command: |
            cd frontend
            npm install
            npm audit fix --audit-level=critical --force
            npm audit --audit-level=critical

executors:
  aws-exec-env:
    docker:
      - image: amazon/aws-cli
  node-exec-env:
    docker:
      - image: circleci/node:13.8.0

jobs:
  build-frontend:
    executor: node-exec-env
    steps:
      - checkout
      - build
      - save_cache:
          paths: 
            - frontend/node_modules
          key: frontend-modules
  test-frontend:
    executor: node-exec-env
    steps:
      - checkout
      - restore-frontend-cache
      - test
  scan-frontend:
    executor: node-exec-env
    steps:
      - checkout
      - restore-frontend-cache
      - scan
      - slack/notify:
          event: fail
          template: basic_fail_1

  build-backend:
    executor: node-exec-env
    steps:
      - checkout
      - build
      - save_cache:
          paths: 
            - backend/node_modules
          key: backend-modules
  test-backend:
    executor: node-exec-env
    steps:
      - checkout
      - restore-backend-cache
      - test
  scan-backend:
    executor: node-exec-env
    steps:
      - checkout
      - restore-backend-cache
      - scan

  deploy-infrastructure:
    executor: aws-exec-env
    steps:
      - checkout
      - run: yum install tar gzip -y
      - run:
          name: create ec2 and security group which opens port 22 and 3030
          command: |
            aws cloudformation deploy \
            --template-file .circleci/files/backend.yml \
            --stack-name "udapeople-backend-${CIRCLE_WORKFLOW_ID:0:7}" \
            --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}" \
            --tags project=udapeople
      - run:
          name: create an s3 bucket
          command: |
            aws cloudformation deploy \
            --template-file .circleci/files/frontend.yml \
            --stack-name "udapeople-frontend-${CIRCLE_WORKFLOW_ID:0:7}"

workflows:
  default:
    jobs:
      - build-frontend
      - test-frontend:
          requires:
            - build-frontend
      - scan-frontend:
          context: slack-secret
          requires:
            - build-frontend
      - build-backend
      - test-backend:
          requires:
            - build-backend
      - scan-backend:
          requires:
            - build-backend
      - deploy-infrastructure